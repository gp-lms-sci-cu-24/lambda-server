CREATE SEQUENCE IF NOT EXISTS course_registers_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS course_seq START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS department_seq START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS locations_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS timing_registers_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS timing_seq START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS user_seq START WITH 1 INCREMENT BY 10;

CREATE TABLE course_class_timing
(
    id          BIGINT NOT NULL,
    class_type  VARCHAR(255),
    day         VARCHAR(255),
    start_time  BIGINT,
    end_time    BIGINT,
    location_id BIGINT,
    CONSTRAINT pk_course_class_timing PRIMARY KEY (id)
);

CREATE TABLE course_classes
(
    course_class_id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    course_id                     BIGINT,
    publish_date                  TIMESTAMP WITHOUT TIME ZONE,
    course_semester               VARCHAR(255),
    course_state                  VARCHAR(255),
    max_capacity                  INTEGER,
    number_of_students_registered INTEGER,
    capacity_so_far               INTEGER,
    group_number_seq              INTEGER,
    CONSTRAINT pk_course_classes PRIMARY KEY (course_class_id)
);

CREATE TABLE course_registers
(
    course_register_id BIGINT NOT NULL,
    course_class_id    BIGINT,
    student_id         BIGINT,
    register_date      TIMESTAMP WITHOUT TIME ZONE,
    grade              BIGINT,
    CONSTRAINT pk_course_registers PRIMARY KEY (course_register_id)
);

CREATE TABLE courses
(
    id           BIGINT       NOT NULL,
    name         VARCHAR(255) NOT NULL,
    code         VARCHAR(255) NOT NULL,
    info         VARCHAR(255) NOT NULL,
    credit_hours INTEGER      NOT NULL,
    CONSTRAINT pk_courses PRIMARY KEY (id)
);

CREATE TABLE courses_course_prerequisites
(
    course_id               BIGINT NOT NULL,
    course_prerequisites_id BIGINT NOT NULL,
    CONSTRAINT pk_courses_courseprerequisites PRIMARY KEY (course_id, course_prerequisites_id)
);

CREATE TABLE department_courses
(
    semester      VARCHAR(255),
    mandatory     BOOLEAN NOT NULL,
    department_id BIGINT  NOT NULL,
    course_id     BIGINT  NOT NULL,
    CONSTRAINT pk_department_courses PRIMARY KEY (department_id, course_id)
);

CREATE TABLE departments
(
    id    BIGINT       NOT NULL,
    name  VARCHAR(255) NOT NULL,
    info  VARCHAR(255) NOT NULL,
    image VARCHAR(255),
    code  VARCHAR(255) NOT NULL,
    CONSTRAINT pk_departments PRIMARY KEY (id)
);

CREATE TABLE locations
(
    id           BIGINT       NOT NULL,
    path         VARCHAR(255) NOT NULL,
    info         VARCHAR(255),
    max_capacity INTEGER      NOT NULL,
    CONSTRAINT pk_locations PRIMARY KEY (id)
);

CREATE TABLE professors
(
    id BIGINT NOT NULL,
    CONSTRAINT pk_professors PRIMARY KEY (id)
);

CREATE TABLE refresh_tokens
(
    uid         VARCHAR(255)                NOT NULL,
    token       VARCHAR(255)                NOT NULL,
    expiry_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    user_agent  VARCHAR(255)                NOT NULL,
    ip_address  VARCHAR(255)                NOT NULL,
    user_id     BIGINT,
    CONSTRAINT pk_refresh_tokens PRIMARY KEY (uid)
);

CREATE TABLE students
(
    id               BIGINT       NOT NULL,
    first_name       VARCHAR(255) NOT NULL,
    father_name      VARCHAR(255) NOT NULL,
    grandfather_name VARCHAR(255) NOT NULL,
    lastname         VARCHAR(255) NOT NULL,
    code             VARCHAR(255) NOT NULL,
    credit_hours     INTEGER          DEFAULT 0,
    address          VARCHAR(255),
    gpa              DOUBLE PRECISION DEFAULT 0,
    level            VARCHAR(255),
    joining_year     VARCHAR(255),
    department_id    BIGINT,
    CONSTRAINT pk_students PRIMARY KEY (id)
);

CREATE TABLE timing_registers
(
    id                           BIGINT NOT NULL,
    course_class_course_class_id BIGINT,
    course_class_timing_id       BIGINT,
    register_date                TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_timing_registers PRIMARY KEY (id)
);

CREATE TABLE user_roles
(
    user_id BIGINT NOT NULL,
    roles   VARCHAR(255)
);

CREATE TABLE users
(
    id                         BIGINT               NOT NULL,
    username                   VARCHAR(255)         NOT NULL,
    password                   VARCHAR(255)         NOT NULL,
    profile_picture            VARCHAR(255),
    is_enabled                 BOOLEAN DEFAULT TRUE NOT NULL,
    is_account_non_expired     BOOLEAN DEFAULT TRUE NOT NULL,
    is_account_non_locked      BOOLEAN DEFAULT TRUE NOT NULL,
    is_credentials_non_expired BOOLEAN DEFAULT TRUE NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

ALTER TABLE courses
    ADD CONSTRAINT uc_courses_code UNIQUE (code);

ALTER TABLE departments
    ADD CONSTRAINT uc_departments_code UNIQUE (code);

ALTER TABLE departments
    ADD CONSTRAINT uc_departments_name UNIQUE (name);

ALTER TABLE students
    ADD CONSTRAINT uc_students_code UNIQUE (code);

ALTER TABLE users
    ADD CONSTRAINT uc_users_username UNIQUE (username);

ALTER TABLE course_classes
    ADD CONSTRAINT FK_COURSE_CLASSES_ON_COURSE FOREIGN KEY (course_id) REFERENCES courses (id);

ALTER TABLE course_class_timing
    ADD CONSTRAINT FK_COURSE_CLASS_TIMING_ON_LOCATION FOREIGN KEY (location_id) REFERENCES locations (id);

ALTER TABLE course_registers
    ADD CONSTRAINT FK_COURSE_REGISTERS_ON_COURSE_CLASS FOREIGN KEY (course_class_id) REFERENCES course_classes (course_class_id);

ALTER TABLE course_registers
    ADD CONSTRAINT FK_COURSE_REGISTERS_ON_STUDENT FOREIGN KEY (student_id) REFERENCES students (id);

ALTER TABLE department_courses
    ADD CONSTRAINT FK_DEPARTMENT_COURSES_ON_COURSE FOREIGN KEY (course_id) REFERENCES courses (id);

ALTER TABLE department_courses
    ADD CONSTRAINT FK_DEPARTMENT_COURSES_ON_DEPARTMENT FOREIGN KEY (department_id) REFERENCES departments (id);

ALTER TABLE professors
    ADD CONSTRAINT FK_PROFESSORS_ON_ID FOREIGN KEY (id) REFERENCES users (id);

ALTER TABLE refresh_tokens
    ADD CONSTRAINT FK_REFRESH_TOKENS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE students
    ADD CONSTRAINT FK_STUDENTS_ON_DEPARTMENT FOREIGN KEY (department_id) REFERENCES departments (id);

ALTER TABLE students
    ADD CONSTRAINT FK_STUDENTS_ON_ID FOREIGN KEY (id) REFERENCES users (id);

ALTER TABLE timing_registers
    ADD CONSTRAINT FK_TIMING_REGISTERS_ON_COURSE_CLASS_COURSE_CLASS FOREIGN KEY (course_class_course_class_id) REFERENCES course_classes (course_class_id);

ALTER TABLE timing_registers
    ADD CONSTRAINT FK_TIMING_REGISTERS_ON_COURSE_CLASS_TIMING FOREIGN KEY (course_class_timing_id) REFERENCES course_class_timing (id);

ALTER TABLE courses_course_prerequisites
    ADD CONSTRAINT fk_coucoupre_on_course FOREIGN KEY (course_id) REFERENCES courses (id);

ALTER TABLE courses_course_prerequisites
    ADD CONSTRAINT fk_coucoupre_on_courseprerequisites FOREIGN KEY (course_prerequisites_id) REFERENCES courses (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_user_roles FOREIGN KEY (user_id) REFERENCES users (id);